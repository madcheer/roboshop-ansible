- name: catalogue installation
  hosts: catalogue
  become: yes
  tasks:
    - name: Disbling default version Nodjs version
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enbaing Nodjs:18 version
      ansible.builtin.command: dnf module enable nodejs:18 -y
      
    - name: Installing nodejs:18
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: create roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: create a app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download the application code to the app directory
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
        dest: /tmp

    - name: unzip the catalogue.zip file
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: install npm dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app

      
    - name: copying catalogue service file
      ansible.builtin.copy:
        src: /home/centos/roboshop-ansible/catalogue.service
        dest: /etc/systemd/system/

    - name: reload the daemon
      ansible.builtin.systemd_service:
        daemon_reload: true

  #start the service after the data is loaded
            
    - name: enable catalogue service
      ansible.builtin.command: systemctl enable catalogue

    - name: start the catalogue service
      ansible.builtin.service:
        name: catalogue
        state: started

    - name: copying mongodb repo
      ansible.builtin.copy:
        src: /home/centos/roboshop-ansible/mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: Installing mongodb client
      ansible.builtin.dnf:
        name: mongodb-org-shell
        state: present

    - name: Load the schema
      ansible.builtin.shell: mongo --host mongodb.madcheer.online </app/schema/catalogue.js



